// Code generated by submsg; DO NOT EDIT.
package messages

import (
	"github.com/edison-moreland/SceneEngine/submsg/runtime/go"
	"io"
)

const (
	EngineMsgCoreReady submsg.MsgId = 0
	EngineMsgCoreInfo  submsg.MsgId = 1
)

type EngineServer interface {
	CoreReady(r io.Reader) error
	CoreInfo(r io.Reader) error
}

func EngineRouter(s EngineServer) submsg.MsgReceiver {
	return func(id submsg.MsgId, body io.Reader) error {
		switch id {
		case EngineMsgCoreReady:
			return s.CoreReady(body)
		case EngineMsgCoreInfo:
			return s.CoreInfo(body)
		default:
			return submsg.ErrMsgIdUnknown
		}
	}
}

type EngineClient struct {
	s submsg.MsgSender
}

func NewEngineClient(s submsg.MsgSender) *EngineClient {
	return &EngineClient{s: s}
}
func (c *EngineClient) CoreReady(l uint32, b io.Reader) {
	c.s(EngineMsgCoreReady, l, b)
}
func (c *EngineClient) CoreInfo(l uint32, b io.Reader) {
	c.s(EngineMsgCoreInfo, l, b)
}

const (
	CoreMsgInfo submsg.MsgId = 0
)

type CoreServer interface {
	Info(r io.Reader) error
}

func CoreRouter(s CoreServer) submsg.MsgReceiver {
	return func(id submsg.MsgId, body io.Reader) error {
		switch id {
		case CoreMsgInfo:
			return s.Info(body)
		default:
			return submsg.ErrMsgIdUnknown
		}
	}
}

type CoreClient struct {
	s submsg.MsgSender
}

func NewCoreClient(s submsg.MsgSender) *CoreClient {
	return &CoreClient{s: s}
}
func (c *CoreClient) Info(l uint32, b io.Reader) {
	c.s(CoreMsgInfo, l, b)
}
